#!/usr/bin/env ruby

M, E = ARGV[0].to_s.split('.')[0, 2].map { |n| n.to_i.to_s.rjust(2, '0') }

require_relative '../lib/grader'

begin
  grader = Graders.const_get("M#{M}").const_get("E#{E}")
rescue
  puts Paint["Não foi encontrado nenhum corretor para o exercício #{M}.#{E}",
             :red, :bold]
  puts Paint["Exemplo de como rodar: ep MODULO.EXERCICIO", :yellow]
  exit
end

case M.to_i
when 2, 4, 6, 8
  work_dir = File.expand_path("~/ep/exercicios/m#{M.to_i}",
    File.dirname(__FILE__))
else
  work_dir = File.expand_path("~/ep/exercicios/m#{M.to_i}/e#{E.to_i}",
    File.dirname(__FILE__))
end
# puts Paint["Corrigindo exercício no diretório: #{work_dir}", :yellow]
# puts

begin
  grader.new(work_dir: work_dir, show_hints: true).run
rescue Exception => e
  puts Paint["Houve uma falha ao tentar corrigir o exercício.", :red, :bold]
  raise e
end
